version: "3.8"

services:
  # MySQL database service
  mysql:
    image: mysql:latest
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: Test@123           # Root password for MySQL
      MYSQL_DATABASE: BankDB                  # Name of the database to create
    volumes:
      - mysql-bankapp:/var/lib/mysql          # Persistent storage for MySQL data
    networks:
      - bankapp                               # Network for communication between services
    restart: always
    healthcheck:                              # Healthcheck to ensure MySQL is ready
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-pTest@123"]
      interval: 10s                           # Interval between health checks
      timeout: 5s                             # Timeout for health check
      retries: 3                              # Retry count before health check starts

  # Spring Boot application service (BankApp)
bankapp:
  image: bankapp-mini
  container_name: bankapp-mini
  environment:
    SPRING_DATASOURCE_USERNAME: root
    SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/BankDB?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
    SPRING_DATASOURCE_PASSWORD: Test@123
  ports:
    - "8000:8000"  # Expose port 8000 externally
  depends_on:
    - mysql
  networks:
    - bankapp
  restart: always


  # Nginx reverse proxy service
  nginx:
    image: nginx:1.23.3-alpine
    container_name: nginx
    ports:
      - "8080:80"                               # Expose Nginx on port 80
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf  # Nginx configuration
    depends_on:
      - bankapp                               # Ensure BankApp starts before Nginx
    networks:
      - bankapp                               # Network for communication with BankApp

volumes:
  mysql-bankapp:                              # Volume for persistent MySQL data

networks:
  bankapp:                                    # Network for services communication
